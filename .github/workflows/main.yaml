name: Django CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies and check project
        run: |
          python -m pip install --upgrade pip virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check
        continue-on-error: true

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Run tests
        run: |
          python -m pip install --upgrade pip virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager
        continue-on-error: true

  oast:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Safety scan
        run: |
          docker run --rm -v ${{ github.workspace }}:/src hysnsec/safety check -r requirements.txt --json > oast-results.json
        continue-on-error: true

      - name: Upload OAST results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Safety
          path: oast-results.json

  oast2:
    name: dependency_test
    runs-on: ubuntu-22.04
    needs: oast
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'webgoat'
          path: '.'
          format: 'JSON'
        continue-on-error: true  # must be on same level as `uses`, but GitHub Actions only supports `continue-on-error` for `run`, not `uses`.

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck report
          path: reports
		  
  secret_scan:
	name:trufflehog_secrets_canning
	runs-on: ubuntu-22.04
	needs: oast2
	steps:
	  - uses: actions/checkout@v3
	  - run: docker run -rm -v $(pwd):/src hysnsec/trufflehog filesystem --directory=/src --json > trufflehog-output.json
	    continue-on-error: true
	  - uses: actions/upload-artifact@v4
	    with: 
		  name: Trufflehog
		  path: trufflehog-output.json
		if:always()
		
  sast:
    name: bandit_sast
    runs-on: ubuntu-22.04
	needs: secret_scan
	steps:
	  - uses: actions/checkout@v3
	  - run: docker run -rm -v$(pwd):/src hysnsec/bandit -r /src -f json /src/bandit_output.json
	    continue-on-error: true
	  - uses: actions/upload-artifact@v4
	    with:
		  name: bandit
		  path: bandit_output.json
		if:always()
	
  integration:
    runs-on: ubuntu-22.04
    needs: bandit_sast
    steps:
      - name: Run integration placeholder
        run: echo "This is an integration step"
        continue-on-error: true

      - name: Simulate failure
        run: exit 1
        continue-on-error: true

  prod:
    runs-on: ubuntu-22.04
    needs: integration
    steps:
      - name: Deploy placeholder
        run: echo "This is a deploy step."
        continue-on-error: true

